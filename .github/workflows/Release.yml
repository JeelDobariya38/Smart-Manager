name: Publish Package To PyPi

on:
  release:
    types: [published]

jobs:
  Release-Nature:
    runs-on: ubuntu-latest

    steps:
      - name: Check release type
        run: |
          if [ "${{ github.event.release.prerelease }}" == "false" ]; then
            echo "Stable Release."
          else
            echo "Prerelease Release"
          fi
    
  Tests:
    runs-on: ["ubuntu-latest", "windows-latest", "macOS-latest"]

    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --no-root

    - name: Run MyPy
      run: |
        poetry run mypy SmartManager --ignore-missing-imports
    
    - name: Run Flake8
      run: |
        poetry run flake8 SmartManager

    - name: Run Pytest
      run: |
        poetry run coverage run -m pytest
        
    - name: Coverage Report
      run: |
        poetry run coverage report

  report:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --no-root
    
    - name: Run Pytest
      run: |
        poetry run coverage run -m pytest
    
    - name: Generate HTML Coverage Report
      run: |
        poetry run coverage html -d coverage_html

    - name: Upload HTML Report as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage_html
